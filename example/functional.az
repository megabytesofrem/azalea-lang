-- extern fn "console.log" console_log(s: String)

-- -- Forall quantifier
-- fn id[A](x: A) = x
-- fn head(xs: Array[A]) = xs.[0]
-- fn snd(xs: Array[A]) = xs.[1]

-- -- Pair type
-- record Pair[A,B] = {
--   first: A,
--   second: B
-- }

-- fn main() = do
--   console_log("Hello")
-- end

-- fn make_pair[A, B](x: A, y: B) = Pair { first: x, second: y }


-- -- Testing it out
-- let pair1: Pair[Int, String] = make_pair(1, "hello")

-- fn apply[A, B](f: fn(A) -> B, x: A) = f(x)
-- fn apply2[A, B, C](f: fn(A, B) -> C, x: A, y: B) = f(x, y)


fn curry(f: fn(A, B) -> C): fn(A) -> fn(B) -> C = \(x) -> \(y) -> f(x, y)
fn uncurry(f: fn(A) -> fn(B) -> C): fn(A, B) -> C = \(x, y) -> f(x)(y)

let add: fn(Int, Int) -> Int = \(x, y) -> x + y
let add_curry = curry(add)

add_curry(1)(2)
uncurry(add_curry)(1, 2)