-- This file demonstrates polymorphism in Azalea.

record Container[A] = {
  value: A
}


-- This is bad and should not type check since A could be anything, 
-- but our function always put a string into the container which breaks type safety.
-- fn bad[A](x: String): Container[A] = Container {
--   value: x
-- }

-- Good version that uses polymorphism correctly.
fn good[A](x: A): Container[A] = Container {
  value: x
}

fn get_value[A](c: Container[A]): A = c.value